"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-gje*)re(=3#7l1!ot35z##wz*xv#y1%-23&wc1h6b0d6+6$6&#"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['mysite.com','127.0.0.1','localhost']


# Application definition

INSTALLED_APPS = [
    # local App
    "account.apps.AccountConfig",

    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # 3rd party
    'social_django',
    'django_extensions',
    'easy_thumbnails',
    'debug_toolbar',

    # local App
    'images.apps.ImagesConfig',
    'actions.apps.ActionsConfig',
    'messagesApp.apps.MessagesappConfig',

]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "bookmarks.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "bookmarks.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
import os
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Tells Django which URL to redirect the user to after a successful login if no next parameter is present in the request
LOGIN_REDIRECT_URL = 'dashboard'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'


# Let django sent emails

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Media file settings
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'








# Define authentication backends
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'account.authentication.EmailAuthBackend',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.google.GoogleOAuth2',
]





# social Auth for facebook
SOCIAL_AUTH_FACEBOOK_KEY = '607677544687555' # Facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = '53d0d844db1d2c14a6bab48bcbdc28a3' # Facebook App Secret

#Optionally, you can define a SOCIAL_AUTH_FACEBOOK_SCOPE setting with the extra permissions you want to ask Facebook users for
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']


# social Auth for Twitter
SOCIAL_AUTH_TWITTER_KEY = 'ydQhYlfKIP9j8DNzn9eIsAXh3' # Twitter API Key
SOCIAL_AUTH_TWITTER_SECRET = 'xw6bLHYjreWbhHuRckUjsBwaq8soK0WnNRflb6wYfhw0msp9jn' # Twitter API Secret



# social Auth for Google
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '846098123362-38aq2hdspdjjmtfujo9fa09ir6qd1ooe.apps.googleusercontent.com' # Google Client ID
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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' # Google Client Secret


SOCIAL_AUTH_PIPELINE = [
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',

    # Add method to create profile for the created users
    'account.authentication.create_profile',

    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
]



from django.urls import reverse_lazy

#Another way to specify the URL for a model is by adding the ABSOLUTE_URL_OVERRIDES setting to your project

# Django adds a get_absolute_url() method dynamically to any models that appear in the ABSOLUTE_URL_OVERRIDES setting.
ABSOLUTE_URL_OVERRIDES = {
    'auth.user': lambda u: reverse_lazy('user_detail',
                                        args=[u.username])
}

# Django Debug Toolbar will only display if your IP address matches an entry in the INTERNAL_IPS setting
INTERNAL_IPS = [
    '127.0.0.1',
] 


# These are the settings for the Redis server and the database that you will use for your project.
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0